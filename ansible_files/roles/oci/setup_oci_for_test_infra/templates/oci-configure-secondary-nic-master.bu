variant: openshift
version: 4.14.0
metadata:
  name: 00-master-oci-configure-secondary-nic
  labels:
    machineconfiguration.openshift.io/role: master
storage:
  files:
  - mode: 0755
    path: "/usr/local/bin/oci-configure-secondary-nic.sh"
    contents:
      inline: |
        #!/usr/bin/env bash
 
        set -e
        set -x

        MTU=9000

        function get_if_name_from_mac_address {
          mac_address="${1}"
          ip -json link | jq --raw-output --arg mac_address "${mac_address}" '. | map(select(.address==($mac_address|ascii_downcase))) | .[].ifname'
        }

        vnics=$(curl --silent -H "Authorization: Bearer Oracle" -L http://169.254.169.254/opc/v2/vnics/)
        secondary_if_mac_address=$(jq -r '.[1].macAddr' <<< "${vnics}")
        secondary_if_name=$(get_if_name_from_mac_address "${secondary_if_mac_address}")
        secondary_if_ip_address=$(jq -r '.[1].privateIp' <<< "${vnics}")
        secondary_if_default_gateway=$(jq -r '.[1].virtualRouterIp' <<< "${vnics}")
        secondary_if_subnet=$(jq -r '.[1].subnetCidrBlock' <<< "${vnics}")
        secondary_if_subnet_size=$(cut -f 2 -d '/' <<< "${secondary_if_subnet}")

        if [ ! -f "/etc/NetworkManager/system-connections/${secondary_if_name}.nmconnection" ]
        then
          nmcli connection add con-name "${secondary_if_name}" ifname "${secondary_if_name}" type ethernet ip4 "${secondary_if_ip_address}/${secondary_if_subnet_size}" gw4 "${secondary_if_default_gateway}"
          nmcli connection modify "${secondary_if_name}" ethernet.mtu ${MTU}
          nmcli connection modify "${secondary_if_name}" ipv4.route-metric 0 # make this interface the default interface
          nmcli connection modify "${secondary_if_name}" connection.autoconnect true

          nmcli connection reload
          nmcli connection up "${secondary_if_name}"
        fi

        if [ ! -f "/etc/default/nodeip-configuration" ]
        then
          # Ensure Kubernetes will use the secondary interface
          echo "NODEIP_HINT=${secondary_if_name}" > /etc/default/nodeip-configuration
        fi

        # workaround to ensure the primary interface will get DNS settings from DHCP
        primary_if_mac_address=$(jq -r '.[0].macAddr' <<< "${vnics}")
        primary_if_name=$(get_if_name_from_mac_address "${primary_if_mac_address}")
        nmcli device reapply "${primary_if_name}"
systemd:
  units:
  - name: oci-configure-secondary-nic.service
    enabled: true
    contents: |
      [Unit]
      Description=Configure secondary NIC on OCI
      Wants=network.target
      Before=ovs-configuration.service kubelet.service

      [Service]
      ExecStart=/usr/local/bin/oci-configure-secondary-nic.sh
      Type=oneshot
      RemainAfterExit=yes
      Restart=on-failure
      RestartSec=5

      [Install]
      WantedBy=network-online.target
