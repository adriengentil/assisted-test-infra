- name: Create and configure the equinix infrastructure to run heterogneous cluster tests
  hosts: localhost
  vars_prompt:
    - name: equinix_project_id
      prompt: Equinix metal project ID in which the device(s) will be created
      private: false
    - name: equinix_auth_token
      prompt: Equinix metal API token
    - name: equinix_ssh_private_key_path
      prompt: Path to an SSH private key allowed to connect on the created device(s)
      private: false
    - name: equinix_unique_id
      prompt: Hostname prefix which will be used to identify the device(s)
      private: false
    - name: equinix_tf_vars_file
      prompt: Place where the Terrafom variable file will be stored
      private: false
    - name: equinix_tf_state_file
      prompt: Place where the Terrafom state file will be stored
      private: false
  vars:
    terraform_equinix_workdir: "{{ [playbook_dir, '..', 'terraform_files', 'equinix-ci-machine'] | path_join | realpath }}"
  roles:
    - equinix/heterogeneous_create_infra # Create the required devices to test heterogeneous scenarios
    - equinix/export_primary_device_connection_details # Export the connection details, required for the common steps in Prow

# Here's the network configuration to setup between both devices:
# ┌─────────────┐
# │Secondary    │172.16.0.2/30
# │             ├────────────┐
# │libvirt net  │            │
# │172.16.16/20 ├─────────┐  │
# └─────────────┘10/25    │  │
#               Equinix   │  │IPIP
#             managed net │  │tunnel
# ┌─────────────┐10/25    │  │
# │Primary      ├─────────┘  │
# │             │            │
# │libvirt net  ├────────────┘
# │192.168/16   │172.16.0.1/30
# └─────────────┘
- name: Configure and setup IPIP tunnel
  hosts: heterogeneous
  vars:
    ipip_tunnel_network_prefix_ipv4: 172.16.0.0/30
    primary_internal_network_prefix_ipv4: 192.168.0.0/16
    secondary_internal_network_prefix_ipv4: 172.16.16.0/20
    primary_internal_network_prefix_ipv6: 1001:db9::/120 # unconfigured as ipip doesn't support ipv6
    secondary_internal_network_prefix_ipv6: fde0:bd0d:a8cb::/48 # unconfigured as ipip doesn't support ipv6
  tasks:
    - name: Set network facts on primary device
      ansible.builtin.set_fact:
        internal_network_prefix_ipv4: "{{ primary_internal_network_prefix_ipv4 }}"
        internal_network_prefix_ipv6: "{{ primary_internal_network_prefix_ipv6 }}"
        ipip_local_ipv4: "{{ access_private_ipv4 }}"
        ipip_remote_ipv4: "{{ hostvars[groups['secondary'][0]].access_private_ipv4 }}"
        ipip_route_to_network_ipv4: "{{ secondary_internal_network_prefix_ipv4 }}"
        ipip_route_to_network_ipv6: "{{ secondary_internal_network_prefix_ipv6 }}"
        ipip_tunnel_ipv4: >-
          {{
            ipip_tunnel_network_prefix_ipv4 | ansible.utils.ipaddr('next_usable')
          }}/{{
            ipip_tunnel_network_prefix_ipv4 | ansible.utils.ipaddr('prefix')
          }}
      when: inventory_hostname == groups['primary'][0]

    - name: Set network facts on secondary device
      ansible.builtin.set_fact:
        internal_network_prefix_ipv4: "{{ secondary_internal_network_prefix_ipv4 }}"
        internal_network_prefix_ipv6: "{{ secondary_internal_network_prefix_ipv6 }}"
        ipip_local_ipv4: "{{ access_private_ipv4 }}"
        ipip_remote_ipv4: "{{ hostvars[groups['primary'][0]].access_private_ipv4 }}"
        ipip_route_to_network_ipv4: "{{ primary_internal_network_prefix_ipv4 }}"
        ipip_route_to_network_ipv6: "{{ primary_internal_network_prefix_ipv6 }}"
        ipip_tunnel_ipv4: >-
          {{
            ipip_tunnel_network_prefix_ipv4 | ansible.utils.ipaddr('last_usable')
          }}/{{
            ipip_tunnel_network_prefix_ipv4 | ansible.utils.ipaddr('prefix')
          }}
      when: inventory_hostname == groups['secondary'][0]

    - name: Setup IPIP between primary and secondary devices
      ansible.builtin.import_role:
        name: common/setup_ipip_tunnel

- name: Share a unique SSH key pair among the created devices
  hosts: heterogeneous
  roles:
    - name: common/setup_ssh_key_pair

- name: Setup libvirtd on secondary machine
  hosts: secondary[0]
  roles:
    - name: common/setup_libvirtd

- name: Create directory were boot ISO will be placed
  hosts: heterogeneous
  vars:
    iso_images_shared_directory: "/tmp/test_images" # value of IMAGE_FOLDER in test-infra
  tasks:
    - name: Create shared directory {{ iso_images_shared_directory }}
      ansible.builtin.file:
        path: "{{ iso_images_shared_directory }}"
        state: directory
        mode: '0755'

    - name: Set shared directory as fact
      ansible.builtin.set_fact:
        iso_images_shared_directory: "{{ iso_images_shared_directory }}"

- name: Setup shared filesystem to sync boot ISO images between hosts
  hosts: primary[0]
  roles:
    - name: common/setup_sftp_share
      vars:
        rclone_remote_name: "iso-images"
        remote_host_ip: "{{ hostvars[groups['secondary'][0]].access_private_ipv4 }}"
        shared_directory: "{{ iso_images_shared_directory }}"

- name: Export day2 heterogeneous configuration to assisted-test-infra
  hosts: secondary[0]
  tasks:
    - name: Write day2 extra configuration
      ansible.builtin.import_role:
        name: test-infra/export-heterogeneous-day2-configuration
      delegate_to: localhost
